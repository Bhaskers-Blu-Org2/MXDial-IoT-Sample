@ECHO OFF
REM ##########################################################################
REM
REM  Description: Devkit installation script for Windows
REM
REM  Modification history:
REM          11-27-2017    yirwen    refactor code
REM
REM ##########################################################################
PUSHD %~dp0

IF "%PROCESSOR_ARCHITECTURE%" EQU "x86" (
    SET INSTALL_NODE_VERSION=x86
) ELSE IF "%PROCESSOR_ARCHITECTURE%" EQU "AMD64" (
    SET INSTALL_NODE_VERSION=x64
) ELSE (
    ECHO Error: you're running the %PROCESSOR_ARCHITECTURE% version of Windows, only x86 and AMD64 version of Windows are supported
    SET ERRORLEVEL=1
    GOTO exit
)

ECHO Copying files...
REM Copy installation scripts and files to the user folder
IF NOT EXIST "%USERPROFILE%\azure-board-cli" (
    MKDIR "%USERPROFILE%\azure-board-cli"
    IF %ERRORLEVEL% NEQ 0 (
        ECHO Error occurred when making directory %USERPROFILE%\azure-board-cli
        GOTO exit
    )
)
XCOPY /Y /S /Q * "%USERPROFILE%\azure-board-cli"
IF %ERRORLEVEL% NEQ 0 (
    ECHO Error occurred when copying files to %USERPROFILE%\azure-board-cli
    GOTO exit
)

REM Copy Arduino packages to the Arduino data folder
IF NOT EXIST "%USERPROFILE%\AppData\Local\Arduino15\staging\packages" (
    MKDIR "%USERPROFILE%\AppData\Local\Arduino15\staging\packages"
    IF %ERRORLEVEL% NEQ 0 (
        ECHO Error occurred when making directory %USERPROFILE%\AppData\Local\Arduino15\staging\packages
        GOTO exit
    )
)
XCOPY /Y /S /Q "tools\staging\*" "%USERPROFILE%\AppData\Local\Arduino15\staging\packages"
IF %ERRORLEVEL% NEQ 0 (
    ECHO Error occurred when copying files to %USERPROFILE%\AppData\Local\Arduino15\staging\packages
    GOTO exit
)

IF EXIST "%USERPROFILE%\AppData\Local\Arduino15\packages\AZ3166" (
    RD /S /Q "%USERPROFILE%\AppData\Local\Arduino15\packages\AZ3166"
    IF EXIST "%USERPROFILE%\AppData\Local\Arduino15\packages\AZ3166" (
        ECHO Error occurred when removing directory %USERPROFILE%\AppData\Local\Arduino15\packages\AZ3166
        SET ERRORLEVEL=1
        GOTO exit
    )
)

CD /D "%USERPROFILE%\azure-board-cli"

REM Install Node.js if not installed
FOR /F "delims=" %%I IN ('node -v 2^>NUL') DO (
    SET NODE_VER=%%I
)
IF NOT DEFINED NODE_VER (
    GOTO nodeInstall
)

REM Skip Node.js installation if there is a Node.js of higher version
SET VERSION_STRING=%NODE_VER:~1%
FOR /F "delims=. tokens=1,2,3" %%I IN ("%VERSION_STRING%") DO (
    SET NODE_VER_SUB1=%%I
    SET NODE_VER_SUB2=%%J
    SET NODE_VER_SUB3=%%K
)
IF NOT DEFINED NODE_VER_SUB1 SET NODE_VER_SUB1=0
IF NOT DEFINED NODE_VER_SUB2 SET NODE_VER_SUB2=0
IF NOT DEFINED NODE_VER_SUB3 SET NODE_VER_SUB3=0
IF %NODE_VER_SUB1% GTR 8 GOTO nodeFinish
IF %NODE_VER_SUB1% EQU 8 IF %NODE_VER_SUB2% GTR 9 GOTO nodeFinish
IF %NODE_VER_SUB1% EQU 8 IF %NODE_VER_SUB2% EQU 9 IF %NODE_VER_SUB3% GEQ 3 GOTO nodeFinish

REM Upgrade the right Node.js according to the architecture of installed version
FOR /F "delims=" %%I IN ('node -p "process.arch"') DO (
    SET NODE_ARCH=%%I
)
IF "%NODE_ARCH%" EQU "ia32" (
    SET INSTALL_NODE_VERSION=x86
)

:nodeInstall
ECHO Installing node-v8.9.3-%INSTALL_NODE_VERSION% ...
MSIEXEC /i "%~dp0\tools\win32\node-v8.9.3-%INSTALL_NODE_VERSION%.msi" /passive /norestart ADDLOCAL=ALL
IF %ERRORLEVEL% NEQ 0 (
    ECHO Error occurred when installing Node.js
    GOTO exit
)

:nodeFinish

REM Install yarn if not installed
FOR /F "delims=" %%I IN ('yarn --version 2^>NUL') DO (
    SET YARN_VER=%%I
)
IF NOT DEFINED YARN_VER (
    GOTO yarnInstall
)

REM Skip yarn installation if there is a yarn of higher version
FOR /F "delims=. tokens=1,2,3" %%I IN ("%YARN_VER%") DO (
    SET YARN_VER_SUB1=%%I
    SET YARN_VER_SUB2=%%J
    SET YARN_VER_SUB3=%%K
)
IF NOT DEFINED YARN_VER_SUB1 SET YARN_VER_SUB1=0
IF NOT DEFINED YARN_VER_SUB2 SET YARN_VER_SUB2=0
IF NOT DEFINED YARN_VER_SUB3 SET YARN_VER_SUB3=0
IF %YARN_VER_SUB1% GTR 1 GOTO yarnFinish
IF %YARN_VER_SUB1% EQU 1 IF %YARN_VER_SUB2% GTR 3 GOTO yarnFinish
IF %YARN_VER_SUB1% EQU 1 IF %YARN_VER_SUB2% EQU 3 IF %YARN_VER_SUB3% GEQ 2 GOTO yarnFinish

:yarnInstall
ECHO Installing yarn-1.3.2 ...
MSIEXEC /i "%~dp0\tools\win32\yarn-1.3.2.msi" /passive /norestart ADDLOCAL=ALL
IF %ERRORLEVEL% NEQ 0 (
    ECHO Error occurred when installing yarn
    GOTO exit
)

:yarnFinish

REM Refresh the environment variables
CALL "%~dp0\tools\win32\RefreshEnv.cmd"

REM Add "CALL" to avoid code exiting after yarn install. More detail at: https://github.com/yarnpkg/yarn/issues/2809
REM Add "2>&1" to avoid warning messages generated by yarn install. For example, package version is no longer supported.
ECHO Installing Node packages ...
CALL yarn install --production --force --no-progress >NUL 2>&1
IF %ERRORLEVEL% NEQ 0 (
    ECHO Error occurred when running yarn install
    GOTO exit
)

ECHO Installing IoT DevKit toolchains ...
node "%USERPROFILE%\azure-board-cli\out\cli.js" installation
IF %ERRORLEVEL% NEQ 0 (
    ECHO Error occurred when running Node.js script
    GOTO exit
)

:exit
POPD
PAUSE
EXIT /B %ERRORLEVEL%
